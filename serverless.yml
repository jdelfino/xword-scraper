org: jdelfino
app: xword-scraper-app
service: xword-scraper

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-2
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:BatchWriteItem
      Resource: 'arn:aws:dynamodb:us-west-2:989024498168:table/xword'

plugins:
  - serverless-offline
  - serverless-dynamodb-local

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
environment:
  COOKIE: foo

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

custom:
  dynamodb:
    stages:
      - dev

functions:
  weekday:
    handler: handler.scrape
    events:
      - schedule: cron(55 21 ? * MON-FRI *)
  weekend:
    handler: handler.scrape
    events:
      - schedule: cron(55 17 ? * SAT-SUN *)

resources: # CloudFormation template syntax
  Resources:
    xword:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: xword
        AttributeDefinitions:
          - AttributeName: date
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: date
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
